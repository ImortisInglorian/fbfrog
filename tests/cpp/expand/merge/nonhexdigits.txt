[1/5] __FB_WIN32__.__FB_64BIT__
      tests/cpp/expand/merge/nonhexdigits.h
invalid suffix on number literal: 'G'
    enum E { A = 0xG } ;
                 ^~~
tests/cpp/expand/merge/nonhexdigits.h(3): construct found here
    enum E {
    ^~~~
## merge operation(1): token found here
     0xG
     ^~~
tests/cpp/expand/merge/nonhexdigits.h(2): from here:
    #define m 0x ## G
                 ^~
[2/5] __FB_WIN32__.(not __FB_64BIT__)
      tests/cpp/expand/merge/nonhexdigits.h
invalid suffix on number literal: 'G'
    enum E { A = 0xG } ;
                 ^~~
tests/cpp/expand/merge/nonhexdigits.h(3): construct found here
    enum E {
    ^~~~
## merge operation(1): token found here
     0xG
     ^~~
tests/cpp/expand/merge/nonhexdigits.h(2): from here:
    #define m 0x ## G
                 ^~
[3/5] __FB_LINUX__.__FB_64BIT__
      tests/cpp/expand/merge/nonhexdigits.h
invalid suffix on number literal: 'G'
    enum E { A = 0xG } ;
                 ^~~
tests/cpp/expand/merge/nonhexdigits.h(3): construct found here
    enum E {
    ^~~~
## merge operation(1): token found here
     0xG
     ^~~
tests/cpp/expand/merge/nonhexdigits.h(2): from here:
    #define m 0x ## G
                 ^~
[4/5] __FB_LINUX__.(not __FB_64BIT__)
      tests/cpp/expand/merge/nonhexdigits.h
invalid suffix on number literal: 'G'
    enum E { A = 0xG } ;
                 ^~~
tests/cpp/expand/merge/nonhexdigits.h(3): construct found here
    enum E {
    ^~~~
## merge operation(1): token found here
     0xG
     ^~~
tests/cpp/expand/merge/nonhexdigits.h(2): from here:
    #define m 0x ## G
                 ^~
[5/5] __FB_DOS__
      tests/cpp/expand/merge/nonhexdigits.h
invalid suffix on number literal: 'G'
    enum E { A = 0xG } ;
                 ^~~
tests/cpp/expand/merge/nonhexdigits.h(3): construct found here
    enum E {
    ^~~~
## merge operation(1): token found here
     0xG
     ^~~
tests/cpp/expand/merge/nonhexdigits.h(2): from here:
    #define m 0x ## G
                 ^~
emitting: tests/cpp/expand/merge/nonhexdigits.bi (1 declaration, 1 TODO)
